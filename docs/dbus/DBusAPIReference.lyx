#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Stratisd D-Bus API Reference Manual
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This work is licensed under a Creative Commons Attribution-ShareAlike 4.0
 International License.
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset

Stratisd Version 0.0.1
\end_layout

\begin_layout Author
Anne Mulhern
\end_layout

\begin_layout Date
Version 0.1
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset

Last modified: 08/23/2017
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Before saving this file preparatory to a commit, make sure that all insets
 are closed.
 If you are able to read this note, you haven't performed this essential
 step.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Asking Questions and Making Changes to this Document
\end_layout

\begin_layout Standard
This document can be found
\begin_inset CommandInset href
LatexCommand href
name "in the stratis-docs repo"
target "https://github.com/stratis-storage/stratis-docs/blob/master/docs/dbus/DBusAPIReference.lyx"

\end_inset

, and is written using \SpecialChar LyX
 2.2.2.
 Please ask any questions by opening an issue, and propose changes as pull
 requests.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
This document describes the D-Bus API for the Stratis daemon.
 The D-Bus API constitutes the only public API of the Stratis daemon at
 the time of this writing.
 The public methods of the daemon's engine do not constitute part of the
 public API.
 The D-Bus API is a thin layer which receives message on the D-Bus, processes
 them, transmits them to the Stratis engine, receives the results from the
 engine, and transmits a response on the D-Bus.
\end_layout

\begin_layout Subsection
Technical Notes
\end_layout

\begin_layout Subsubsection
Constants
\end_layout

\begin_layout Standard
The top level D-Bus object exports lists of certain constant values that
 it uses via properties.
 This allows the client to identify the constants by their name rather than
 by their number and be robust to changes in ordering or the addition of
 new constants by the daemon.
\end_layout

\begin_layout Subsubsection
Emulating an Option type
\end_layout

\begin_layout Standard
The D-Bus specification reserves a signature code for a 
\begin_inset Quotes eld
\end_inset

maybe
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

option
\begin_inset Quotes erd
\end_inset

 type, but this type is not available
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://dbus.freedesktop.org/doc/dbus-specification.html
\end_layout

\end_inset


\end_layout

\end_inset

.
 Nonetheless, it is desirable to have a way of representing a 
\begin_inset Quotes eld
\end_inset

don't care
\begin_inset Quotes erd
\end_inset

 condition when invoking D-Bus methods.
 Certain methods accept a pair argument that mimics such a type.
 The first item is a boolean.
 If the value is false, then the pair represents None.
 If the value is true, then the pair represents Some(x) where x is the second
 item of the pair.
\end_layout

\begin_layout Section
Standard Interfaces and Methods
\end_layout

\begin_layout Subsection
org.freedesktop.dbus.ObjectManager interface
\end_layout

\begin_layout Standard
The top level D-Bus object implements the org.freedesktop.dbus.ObjectManager
 interface.
 This interface defines the GetManagedObjects() method, which returns a
 view of the objects that the D-Bus layer has in its tree.
 This view constitutes a summary of the state of the pools, devices, and
 filesystem which Stratis manages.
 The objects are identified primarily by their D-Bus object paths.
 However, depending on the interface which an object supports it may also
 support certain identifying properties.
 For example, all objects that represent pools support an interface which
 implements a Name and a Uuid property which may be used by the client to
 identify a pool.
\end_layout

\begin_layout Standard
In invoking methods, or obtaining the values of properties, the client must
 identify existing objects by means of their object paths, either implicitly
 by invoking a method on an object constructed from an object path, or explicitl
y, by passing object paths as arguments to a method.
 For example, the API's DestroyPool() method requires two object paths:
\end_layout

\begin_layout Itemize
the object path of the Manager object, on which to invoke the DestroyPool
 method
\end_layout

\begin_layout Itemize
the object path of the pool object, which is passed as an argument to the
 DestroyPool method
\end_layout

\begin_layout Standard
It is expected that the client will identify the object path of the pool
 object by locating it using its Name or Uuid property.
\end_layout

\begin_layout Subsection
org.freedesktop.dbus.Introspectable
\end_layout

\begin_layout Standard
All objects support the org.freedesktop.dbus.Introspectable interface.
 This interface has one method, Introspect(), which returns an XML description
 of the object's interfaces, methods, and properties.
\end_layout

\begin_layout Section
Stratisd Interfaces and Methods
\end_layout

\begin_layout Standard
Each kind of object implements an identifying interface, i.e., pools implement
 a pool interface, filesystems implement a filesystem interface, etc.
 There is a top level manager interface that implements management tasks.
 The following is a description of the interfaces and their methods and
 properties.
 Some more detailed information can be obtained from the introspection informati
on that can be queried for each object, including the signatures of all
 methods and properties.
 All methods return a return code and an accompanying message.
 Some methods also return a result.
 If a method does return a result, then the result is the first element
 in a triple, otherwise the returned value is just a pair of the return
 code and the message.
\end_layout

\begin_layout Subsection
Manager interface
\end_layout

\begin_layout Standard
The Manager interface is the top level interface.
 It manages the creation and destruction of pools and also exports various
 global properties.
\end_layout

\begin_layout Subsubsection*
Methods
\end_layout

\begin_layout Description
ConfigureSimulator This method is solely used to configure the simulator
 engine.
 Invoking it on the real engine is a no-op.
\end_layout

\begin_deeper
\begin_layout Description
Arguments:
\end_layout

\begin_deeper
\begin_layout Description
denominator the denominator of the fraction that determines the frequency
 of unusual occurences, generally failures.
 Signature: u.
\end_layout

\end_deeper
\begin_layout Description
Returns: nothing
\end_layout

\end_deeper
\begin_layout Description
CreatePool This method creates a single pool with the specified name and
 blockdevs.
\end_layout

\begin_deeper
\begin_layout Description
Arguments:
\end_layout

\begin_deeper
\begin_layout Description
name the name of the pool.
 Signature: s.
\end_layout

\begin_layout Description
redundancy the redundancy specification for the pool.
 Signature: (bq).
 Note that redundancy is an Option argument.
\end_layout

\begin_layout Description
force if true, the method will claim all devices specified, regardless of
 whether they seem to belong to another application.
 Signature: b.
\end_layout

\begin_layout Description
devices device nodes of devices to form the pool.
 Signature: as.
\end_layout

\end_deeper
\begin_layout Description
Returns: the object path of the constructed pool and the device nodes of
 the blockdevs added to the pool.
 Signature: (oas)qs.
\end_layout

\end_deeper
\begin_layout Description
DestroyPool This method destroys the specified pool.
\end_layout

\begin_deeper
\begin_layout Description
Arguments:
\end_layout

\begin_deeper
\begin_layout Description
pool_object_path the object path of the pool to destroy.
 Signature: o.
\end_layout

\end_deeper
\begin_layout Description
Returns: true if it was necessary to take an action, otherwise false.
 If the pool has already been destroyed, no action is required.
 Signature: bqs.
\end_layout

\end_deeper
\begin_layout Subsubsection*
Properties
\end_layout

\begin_layout Description
ErrorValues These are the values that are used as return codes by all the
 methods.
 This property is an array of pairs of names and corresponding numeric values.
 Signature: a(sq).
\end_layout

\begin_layout Description
RedundancyValues This property specifies the redundancy values that stratisd
 supports.
 It has the same format as the ErrorValues property.
 Signature: a(sq).
\end_layout

\begin_layout Description
Version The current stratisd version.
 Signature: s.
\end_layout

\begin_layout Subsection
pool interface
\end_layout

\begin_layout Standard
The pool interface manages the devices and filesystems within a pool.
\end_layout

\begin_layout Subsubsection*
Methods
\end_layout

\begin_layout Description
AddDevs This method allows additional devices to be added to the pool after
 it is created.
\end_layout

\begin_deeper
\begin_layout Description
Arguments:
\end_layout

\begin_deeper
\begin_layout Description
force this option has the same meaning as the force option of CreatePool.
 Signature: b.
\end_layout

\begin_layout Description
devices this argument has the same meaning as the device argument of CreatePool.
 Signature: as.
\end_layout

\end_deeper
\begin_layout Description
Returns: the device nodes of the blockdevs added to the pool.
 Signature: asqs.
\end_layout

\end_deeper
\begin_layout Description
CreateFilesystems This method allows creating multiple filesystems, specified
 by name, on a pool.
\end_layout

\begin_deeper
\begin_layout Description
Arguments:
\end_layout

\begin_deeper
\begin_layout Description
specs The specification for each filesystem to be created, currently just
 a name.
 Signature: as.
\end_layout

\end_deeper
\begin_layout Description
Returns a list of pairs of object paths and names of filesystems created.
 Signature: a(os)qs.
\end_layout

\end_deeper
\begin_layout Description
DestroyFilesystems This method allows destroying multiple filesystems.
\end_layout

\begin_deeper
\begin_layout Description
Arguments:
\end_layout

\begin_deeper
\begin_layout Description
filesystems the object paths of the filesystems to be destroyed.
 Signature: ao.
\end_layout

\end_deeper
\begin_layout Description
Returns: the names of the filesystems destroyed.
 Signature: asqs.
\end_layout

\end_deeper
\begin_layout Description
SetName This allows setting the name of the pool.
\end_layout

\begin_deeper
\begin_layout Description
Arguments:
\end_layout

\begin_deeper
\begin_layout Description
new_name The name to set.
 Signature: s.
\end_layout

\end_deeper
\begin_layout Description
Returns: true if the name was actually changed, otherwise false.
 Signature: bqs.
\end_layout

\end_deeper
\begin_layout Subsubsection*
Properties
\end_layout

\begin_layout Description
Name The name of the pool.
 Signature: s.
\end_layout

\begin_layout Description
TotalPhysicalSize The total physical size of the pool in sectors.
 These sectors may be used by the pool for many purposes, so there are always
 fewer sectors than this that can be used to store user data.
 This is the largest physical size that can be meaningfully associated with
 a pool.
 Signature: s.
\end_layout

\begin_layout Description
TotalPhysicalUsed All the sectors in use by the pool for any purpose whatsoever.
 These purposes include storage of user data as well as recording of pool
 metadata and other pool administration.
 This value may never exceed TotalPhysicalSize.
 Signature: s.
\end_layout

\begin_layout Description
Uuid The UUID of the pool.
 This property is constant.
 Signature: s.
\end_layout

\begin_layout Description
BlockDevs An array of information on each of the current block devices that
 make up the pool.
 The information includes:
\begin_inset Newline newline
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="40col%">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
D-Bus type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Example
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Blockdev UUID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
s (string)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

d874ad948d7e41348ba3a7677b2651ef
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
State: one of the following: 
\begin_inset Quotes eld
\end_inset

missing
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

in-use
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

not-in-use
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

failed
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
s (string)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

in-use
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Path to the blockdev
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
s (string)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

/dev/sdc
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Size in sectors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
s (string)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

349837697
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
System-derived identifying information
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
s (string)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

S2X9NX0H810430
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User-set identifying information
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
s (string)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

drive bay 6
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Blockdev Stratis initialization time in ISO 8601 text format (UTC)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
s (string)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

2014-11-28T12:45:59Z
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset

The first two fields will always be valid, but subsequent fields may contain
 empty strings.
\begin_inset Newline newline
\end_inset

Signature: a(sssssss) 
\end_layout

\begin_layout Subsection
filesystem interface
\end_layout

\begin_layout Standard
The fileystem interface manages the properties of individual filesystems.
\end_layout

\begin_layout Subsubsection*
Methods
\end_layout

\begin_layout Description
CreateSnapshot This method allows a snapshot to be created from an existing
 filesystem.
\end_layout

\begin_deeper
\begin_layout Description
Arguments:
\end_layout

\begin_deeper
\begin_layout Description
name The name of the snapshot.
 Signature: s.
\end_layout

\end_deeper
\begin_layout Description
Results: the object path of the newly created filesystem.
 Signature: oqs.
\end_layout

\end_deeper
\begin_layout Description
SetName This allows setting the name of the filesystem.
\end_layout

\begin_deeper
\begin_layout Description
Arguments:
\end_layout

\begin_deeper
\begin_layout Description
name The name to set.
 Signature: s.
\end_layout

\end_deeper
\begin_layout Description
Returns: true if the name was actually changed, otherwise false.
 Signature: bqs.
\end_layout

\end_deeper
\begin_layout Subsubsection*
Properties
\end_layout

\begin_layout Description
Devnode The device node of the filesystem's corresponding thin device.
 This property is constant.
 Signature: s.
\end_layout

\begin_layout Description
Name The name of the filesystem.
 Signature: s.
\end_layout

\begin_layout Description
Pool The object path of the parent pool.
 This property is constant.
 Signature: o.
\end_layout

\begin_layout Description
Uuid The UUID of the filesystem.
 This property is constant.
 Signature: s.
\end_layout

\end_body
\end_document
